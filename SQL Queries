Highest Peak and Longest River by Country

For each country, find the elevation of the highest peak and the length of the longest river, sorted by the highest peak_elevation (from highest to lowest), 
then by the longest river_length (from longest to smallest), then by country_name (alphabetically).
Display NULL when no data is available in some of the columns. Limit only the first 5 rows.

Solution:

SELECT c.`country_name`,
MAX(p.elevation) AS'highest_peak_elevation',
MAX(r.length) AS'longest_river_length'
FROM  countries AS c
JOIN countries_rivers AS cr
ON c.`country_code` = cr. `country_code`
JOIN rivers AS r
ON cr.`river_id` = r.`id`
JOIN mountains_countries AS mc
ON  mc.`country_code`= c.`country_code`
JOIN mountains AS m
ON mc.`mountain_id` = m.`id`
JOIN peaks AS p
ON p.`mountain_id` = m.`id`
GROUP BY c. `country_name`
ORDER BY `highest_peak_elevation` DESC, `longest_river_length` DESC,
c.`country_name`
LIMIT 5;


Continents and Currencies

Write a query that selects:
•	continent_code
•	currency_code
•	currency_usage
Find all continents and their most used currency. Filter any currency that is used in only one country. Sort the result by continent_code and currency_code.

Solution:

SELECT c. `continent_code`, c. `currency_code`, 
COUNT(*) AS `currency_usage`
FROM countries AS c
GROUP BY c. `continent_code`, c. `currency_code`
HAVING `currency_usage` > 1
AND `currency_usage` = (SELECT COUNT(*) AS cn
FROM `countries` AS c2
WHERE c2. `continent_code` = c. `continent_code`
GROUP BY c2. `currency_code`
ORDER BY cn DESC
LIMIT 1)
ORDER BY c.`continent_code`, c. `continent_code`;
